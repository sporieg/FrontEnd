{"version":3,"sources":["app.js","environment.js","github-api.js","issue-detail.js","issue-list.js","loading-indicator.js","main.js","no-selection.js","resources/index.js","resources/elements/loading-indicator.js","messages.js","styles.scss"],"names":["App","inject","api","configureRouter","config","router","title","map","route","moduleId","name","debug","testing","GithubApi","isRequesting","httpClient","me","configure","withBaseUrl","withInterceptor","response","resp","json","todayString","getIssues","url","fetch","getIssueDetails","id","IssueDetail","ea","activate","params","routeConfig","then","issue","navModel","setTitle","publish","IssueList","issues","subscribe","select","msg","created","selectedId","number","nprogress","LoadingIndicator","defaultValue","on","loadingChanged","newValue","start","done","Promise","warnings","wForgottenReturn","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","setRoot","NoSelection","message","globalResources","IssueViewed"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {GithubApi} from './github-api';\n\nexport class App { \n  static inject() { return [GithubApi]; }\n\n  constructor(api) {\n    this.api = api;\n  }\n\n  configureRouter(config, router){\n    config.title = 'Coding Assignment';\n    config.map([\n      {route: '', moduleId: 'no-selection', title: 'Select'},\n      {route: 'issue/:id', moduleId: 'issue-detail', name: 'issues'}\n    ]);\n    this.router = router;\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {HttpClient, json}  from 'aurelia-fetch-client';\r\n\r\nexport class GithubApi{\r\n  isRequesting = false;\r\n\r\n  constructor(){\r\n      this.httpClient = new HttpClient();\r\n      var me = this;\r\n      this.httpClient.configure(config =>config\r\n        .withBaseUrl('https://api.github.com/')\r\n        .withInterceptor({\r\n            response(resp) {\r\n                me.isRequesting = false;\r\n                return resp.json();\r\n            }\r\n        }));\r\n  }\r\n\r\n  todayString(){\r\n      return '2017-2-28';\r\n  }\r\n  \r\n  getIssues(){\r\n    this.isRequesting = true;\r\n    var url = 'repos/angular/angular/issues?since' + this.todayString();\r\n    return this.httpClient.fetch(url);\r\n  }\r\n\r\n  getIssueDetails(id){\r\n    this.isRequesting = true;\r\n    var url = 'repos/angular/angular/issues/' + id;\r\n    return this.httpClient.fetch(url);\r\n  }\r\n}","import {GithubApi} from './github-api'\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {IssueViewed} from './messages';\r\n\r\nexport class IssueDetail {\r\n    static inject() { return [GithubApi, EventAggregator]};\r\n\r\n    constructor(api, ea){\r\n        this.api = api;\r\n        this.ea = ea;\r\n    }\r\n\r\n    activate(params, routeConfig){\r\n        this.routeConfig = routeConfig;\r\n\r\n        return this.api.getIssueDetails(params.id).then(issue => {\r\n            this.issue = issue;\r\n            this.routeConfig.navModel.setTitle(issue.title);\r\n            this.ea.publish(new IssueViewed(issue));\r\n        })\r\n    }\r\n}","import {GithubApi} from './github-api'\r\nimport {EventAggregator} from 'aurelia-event-aggregator';\r\nimport {IssueViewed} from './messages';\r\n\r\nexport class IssueList {\r\n    static inject() { return [GithubApi, EventAggregator]};\r\n\r\n    constructor(api, ea){\r\n        this.api = api;\r\n        this.ea = ea;\r\n        this.issues = [];\r\n\r\n        ea.subscribe(IssueViewed, msg => {\r\n            this.select(msg.issue);\r\n        })\r\n    }\r\n\r\n    created(){\r\n        this.api.getIssues().then(issues => this.issues = issues);\r\n    }\r\n\r\n    select(issue){\r\n        this.selectedId = issue.number;\r\n        return true;\r\n    }\r\n}","import * as nprogress from 'nprogress';\r\nimport {bindable, noView, decorators} from 'aurelia-framework';\r\n\r\nexport let LoadingIndicator = decorators(\r\n  noView(['nprogress/nprogress.css']),\r\n  bindable({name: 'loading', defaultValue: false})\r\n).on(class {\r\n  loadingChanged(newValue) {\r\n    if (newValue) {\r\n      nprogress.start();\r\n    } else {\r\n      nprogress.done();\r\n    }\r\n  }\r\n});\r\n\r\n  ","import environment from './environment';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export class NoSelection {\r\n  constructor() {\r\n    this.message = \"Please Select an issue.\";\r\n  }\r\n}","export function configure(config) {\n  config.globalResources(['./elements/loading-indicator']);\n}\n","import * as nprogress from 'nprogress';\r\nimport {bindable, noView, decorators} from 'aurelia-framework';\r\n\r\nexport let LoadingIndicator = decorators(\r\n  noView(['nprogress/nprogress.css']),\r\n  bindable({name: 'loading', defaultValue: false})\r\n).on(class {\r\n  loadingChanged(newValue) {\r\n    if (newValue) {\r\n      nprogress.start();\r\n    } else {\r\n      nprogress.done();\r\n    }\r\n  }\r\n});\r\n\r\n  ","export class IssueViewed{\r\n    constructor(issue){\r\n        this.issue = issue;\r\n    }\r\n}","body { padding-top: 70px; }\r\n\r\nsection {\r\n  margin: 0 20px;\r\n}\r\n\r\na:focus {\r\n  outline: none;\r\n}\r\n\r\n.navbar-nav li.loader {\r\n    margin: 12px 24px 0 6px;\r\n}\r\n\r\n.no-selection {\r\n  margin: 20px;\r\n}\r\n\r\n.issue-list {\r\n  overflow-y: auto;\r\n  border: 1px solid #ddd;\r\n  padding: 10px;\r\n}\r\n\r\n.panel {\r\n  margin: 20px;\r\n}\r\n\r\n.button-bar {\r\n  right: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  border-top: 1px solid #ddd;\r\n  background: white;\r\n}\r\n\r\n.button-bar > button {\r\n  float: right;\r\n  margin: 20px;\r\n}\r\n\r\nli.list-group-item {\r\n  list-style: none;\r\n}\r\n\r\nli.list-group-item > a {\r\n  text-decoration: none;\r\n}\r\n\r\nli.list-group-item.active > a {\r\n  color: white;\r\n}\r\n\r\n.avatar {\r\n  height: 32px;\r\n  width: 32px;\r\n}\r\n\r\n.avatar-sm {  \r\n  height: 12px;\r\n  width: 12px;\r\n}"],"sourceRoot":".."}